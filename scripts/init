#!/bin/sh

set -e

prepare_dirs() {
  LOGDIR=/var/log/wallarm
  TARANTOOL_LOGFILE=$LOGDIR/tarantool.log

  chown wallarm:wallarm $LOGDIR
  chmod 0750 $LOGDIR

  touch $TARANTOOL_LOGFILE
  chown wallarm:wallarm $TARANTOOL_LOGFILE

  touch /etc/crontab /etc/cron.d/*

  mkdir -p /run/supervisor
}

register_node() {
  args="--batch --no-sync"

  WALLARM_API_USE_SSL="${WALLARM_API_USE_SSL:-true}"
  WALLARM_API_CA_VERIFY="${WALLARM_API_CA_VERIFY:-true}"

  if [ -n "${DEPLOY_FORCE}" ]; then
    args="$args --force"
  fi

  if [ -n "$WALLARM_API_HOST" ]; then
    args="$args -H $WALLARM_API_HOST"
  fi

  if [ -n "$WALLARM_API_PORT" ]; then
    args="$args -P $WALLARM_API_PORT"
  fi

  if [ x"$WALLARM_API_USE_SSL" = x"false" ] \
     || [ x"$WALLARM_API_USE_SSL" = x"False" ] \
     || [ x"$WALLARM_API_USE_SSL" = x"no" ]
  then
    args="$args --no-ssl"
  fi

  if [ x"$WALLARM_API_CA_VERIFY" = x"false" ] \
     || [ x"$WALLARM_API_CA_VERIFY" = x"False" ] \
     || [ x"$WALLARM_API_CA_VERIFY" = x"no" ]
  then
    args="$args --no-verify"
  fi

  if [ -e /etc/wallarm/node.yaml ] \
     && [ -s /etc/wallarm/node.yaml ]
  then
    echo "Node registartion skipped - node.yaml already exists"
  elif [ -n "$NODE_UUID" ] \
       && [ -n "$NODE_SECRET" ]
  then
    /usr/share/wallarm-common/addnode \
      $args \
      --uuid "$NODE_UUID" \
      --secret "$NODE_SECRET"
  else
    /usr/share/wallarm-common/addnode \
      $args \
      --username "$DEPLOY_USER" \
      --password "$DEPLOY_PASSWORD"
  fi
}

sync_node() {
  cmd="/usr/share/wallarm-common/syncnode -c /etc/wallarm-dist/node.yaml -l STDOUT"

  while true; do
    if $cmd; then
      break
    elif [ -f /etc/wallarm/proton.db ] && [ -f /etc/wallarm/proton.db ]; then
      break
    else
      echo "Wait before next syncnode attempt..."
      sleep 5
    fi
  done
}

configure_acl() {
  sed -i -e "s@# wallarm_acl .*@wallarm_acl default;@" /etc/nginx/sites-enabled/default
  sed -i -e '/sync-blacklist/s/^#//' /etc/cron.d/wallarm-node-nginx
  grep -q "sync_blacklist:" /etc/wallarm/node.yaml || \
    printf 'sync_blacklist:\n    nginx_url: http://127.0.0.9:80/wallarm-acl' >> /etc/wallarm/node.yaml
  /usr/sbin/nginx -c /etc/nginx/nginx-blacklistonly.conf &
  cmd="/usr/share/wallarm-common/sync-blacklist --one-time -l STDOUT"

  while true; do
    if runuser -u wallarm -- $cmd; then
      break
    else
      echo "Wait before next sync-blacklist attempt..."
      sleep 5
    fi
  done
  kill $!
  wait
}

configure_nginx() {
  [ -n "$NGINX_BACKEND" ] || return 0

  if [ "$NGINX_BACKEND" = "${NGINX_BACKEND#http://}" ] \
     && [ "$NGINX_BACKEND" = "${NGINX_BACKEND#https://}" ]
  then
    sed -i -e "s#proxy_pass .*#proxy_pass http://$NGINX_BACKEND;#" \
      /etc/nginx/sites-enabled/default
  else
    sed -i -e "s#proxy_pass .*#proxy_pass $NGINX_BACKEND;#" \
      /etc/nginx/sites-enabled/default
  fi

  sed -i -e "s@# wallarm_mode .*@wallarm_mode ${WALLARM_MODE:-monitoring};@" \
    /etc/nginx/sites-enabled/default
}


if [ "x${SLAB_ALLOC_ARENA}" = 'x' ]; then
  if [ -n "$TARANTOOL_MEMORY_GB" ]; then
    SLAB_ALLOC_ARENA=$TARANTOOL_MEMORY_GB
    export SLAB_ALLOC_ARENA
  fi
fi


if [ -z "$DEPLOY_USER" ] || [ -z "$DEPLOY_PASSWORD" ]; then
  if [ ! -f "/etc/wallarm/license.key" ]; then
    echo "ERROR: no DEPLOY_USER or DEPLOY_PASSWORD and no license key in /etc/wallarm/license.key" >&2
    exit 1
  fi
fi


prepare_dirs
register_node
sync_node
configure_nginx
[ ! -z ${WALLARM_ACL_ENABLE+x} ] && configure_acl

exec /usr/bin/supervisord -c /etc/supervisor/supervisord.conf
